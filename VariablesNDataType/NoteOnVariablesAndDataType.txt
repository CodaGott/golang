// To make a variable in golang the syntax is "var" followed by the name of the variable, data-type and the value.

// a variable must comprise of letters, numbers and underscores or combination of all.
// Variable cannot start with a number, contain characters or spaces in-between.
// variable cannot be a keyword.

You can create a variable without spacifying the type but that means you'll have to pass a value immediately afterwards.

If you want to create a variable and pass the value later then you must specify the data-type upon creation.

Different data-types in Golang...
    Numeric Types.
        1. Integers - Integers are used to represent non decimal numbers.

        Unsigned Integers (non-negative Integers)
            unit8 / byte (0 -255)
            unit16 (0 - 65535)
            unit32 (0 - 4294967295)
            uint64 (0 - 18446744073709551615)
        
        Signed Integers (negative Integers)
            int8	8 bits	-128 to 127
            int16	16 bits	-215 to 215 -1
            int32	32 bits	-231 to 231 -1
            int64	64 bits	-263 to 263 -1
            int	Platform dependent	Platform dependent

        Machine Dependent Type
            unit (32 or 64 bits)
            int (same size as unit)

        Floating Point Numbers.

        Floats - floats are used to represent decimal numbers.    

            float32 (IEEE-754 32-bit floating-point numbers)
            float64 (IEEE-754 64-bit floating-point numbers)

    2. Strings - Characters in double quotation marks.
        "Hello"

    3. Boleans - used to check if things are through or false.
        true.
        false.
    
    4. Characters - character in single quotation marks.
        'H'


There are types of variable declaration. Explicit and Implicit creation.

Explicit declaration is when upon creations you define the data-type the variable should hold,
for example "var number unit16" will only hold integer numbers of none negative type.

Implicit is when you don't define the type of data a variable should hold.

A variable can be defined without using the var keyword by doing this "variable name := value"
for example name := "Dozie".


NOTE:
An empty integer variable has a default value of zero, boolean has default value of false.